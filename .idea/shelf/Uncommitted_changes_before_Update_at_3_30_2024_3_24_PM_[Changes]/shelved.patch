Index: app/src/main/java/com/example/securemessagingapp/activities/SignUpActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.securemessagingapp.activities;\r\n\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Base64;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\n//import com.example.securemessagingapp.R;\r\nimport com.example.securemessagingapp.databinding.ActivitySignInBinding;\r\nimport com.example.securemessagingapp.databinding.ActivitySignUpBinding;\r\nimport com.example.securemessagingapp.utilities.Constants;\r\nimport com.example.securemessagingapp.utilities.PreferenceManager;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.Console;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.InputStream;\r\nimport java.util.HashMap;\r\nimport java.util.Hashtable;\r\n\r\npublic class SignUpActivity extends AppCompatActivity {\r\n\r\n    private ActivitySignUpBinding binding;\r\n    private PreferenceManager preferenceManager;\r\n    private String encodedImage;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivitySignUpBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        preferenceManager = new PreferenceManager(getApplicationContext());\r\n        setListners();\r\n    }\r\n    private void setListners(){\r\n\r\n        binding.textSignIn.setOnClickListener(v -> onBackPressed());\r\n        binding.buttonSignUp.setOnClickListener(v->{\r\n            if(isValidSignUpDetails()){\r\n                signUp();\r\n            }\r\n        });\r\n        binding.layoutImage.setOnClickListener(v->{\r\n            Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\r\n            pickImage.launch(intent);\r\n        });\r\n    }\r\n\r\n    private void showToast(String message){\r\n        Toast.makeText(getApplicationContext(), message , Toast.LENGTH_SHORT).show();\r\n    }\r\n    private void signUp()\r\n    {\r\n        loading(true);\r\n        FirebaseFirestore database = FirebaseFirestore.getInstance();\r\n        HashMap<String,Object>user = new HashMap<>();\r\n        user.put(Constants.KEY_NAME, binding.inputName.getText().toString());\r\n        user.put(Constants.KEY_EMAIL,binding.inputEmail.getText().toString());\r\n        user.put(Constants.KEY_PASSWORD,binding.inputPassword.getText().toString());\r\n        user.put(Constants.KEY_IMAGE,encodedImage);\r\n        database.collection(Constants.KEY_COLLECTION_USERS)\r\n                .add(user)\r\n                .addOnSuccessListener(documentReference -> {\r\n                    loading(false);\r\n                    preferenceManager.putBoolean(Constants.KEY_IS_SIGNED_IN,true);\r\n                    preferenceManager.putString(Constants.KEY_USER_ID,documentReference.getId());\r\n                    preferenceManager.putString(Constants.KEY_NAME,binding.inputName.getText().toString());\r\n                    preferenceManager.putString(Constants.KEY_IMAGE,encodedImage);\r\n                    Intent intent = new Intent(getApplicationContext(),MainActivity.class);\r\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                    startActivity(intent);\r\n                })\r\n                .addOnFailureListener(exception ->{\r\n                    loading(false);\r\n                    showToast(exception.getMessage());\r\n                });\r\n    }\r\n    private String encodeImage(Bitmap bitmap){\r\n        int previewWidth = 150;\r\n        int previewHeight = bitmap.getHeight()*previewWidth/bitmap.getWidth();\r\n        Bitmap previewBitmap = Bitmap.createScaledBitmap(bitmap, previewWidth, previewHeight , false);\r\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n        previewBitmap.compress(Bitmap.CompressFormat.JPEG,50,byteArrayOutputStream);\r\n        byte[] bytes = byteArrayOutputStream.toByteArray();\r\n        return Base64.encodeToString(bytes,Base64.DEFAULT);\r\n    }\r\n    private final ActivityResultLauncher<Intent>pickImage=registerForActivityResult(\r\n      new ActivityResultContracts.StartActivityForResult(),\r\n      result ->{\r\n          if(result.getResultCode()==RESULT_OK){\r\n              if(result.getData()!=null)\r\n              {\r\n                  Uri imageUri = result.getData().getData();\r\n                  try{\r\n                      InputStream inputStream = getContentResolver().openInputStream(imageUri);\r\n                      Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\r\n                      binding.imageProfile.setImageBitmap(bitmap);\r\n                      binding.textAddImage.setVisibility(View.GONE);\r\n                      encodedImage = encodeImage(bitmap);\r\n                  }\r\n                  catch (FileNotFoundException e){\r\n                      e.printStackTrace();\r\n                  }\r\n              }\r\n          }\r\n      }\r\n    );\r\n    private Boolean isValidSignUpDetails(){\r\n        if(encodedImage==null)\r\n        {\r\n            showToast(\"Select profile image\");\r\n            return false;\r\n        }\r\n        else if(binding.inputName.getText().toString().trim().isEmpty()){\r\n            showToast(\"Enter name\");\r\n            return false;\r\n        }\r\n        else if(binding.inputEmail.getText().toString().trim().isEmpty()){\r\n            showToast(\"Enter Email\");\r\n            return false;\r\n        }\r\n        else if(!Patterns.EMAIL_ADDRESS.matcher(binding.inputEmail.getText().toString()).matches()){\r\n            showToast(\"Enter valid Email\");\r\n            return false;\r\n        }\r\n        else if(binding.inputPassword.getText().toString().trim().isEmpty() || binding.inputPassword.getText().toString().length()<8 )\r\n        {\r\n            showToast(\"Password must be of minimum 8 characters\");\r\n            return false;\r\n        }\r\n        else if(binding.inputConfirmPassword.getText().toString().trim().isEmpty()){\r\n            showToast(\"Confirm your password\");\r\n            return false;\r\n        }\r\n        else if(!binding.inputPassword.getText().toString().equals(binding.inputConfirmPassword.getText().toString())){\r\n            showToast(\"Password & confirm password must be same\");\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private void loading(Boolean isloading)\r\n    {\r\n        if(isloading){\r\n            binding.buttonSignUp.setVisibility(View.INVISIBLE);\r\n            binding.progressBar.setVisibility(View.VISIBLE);\r\n        }\r\n        else {\r\n            binding.progressBar.setVisibility(View.INVISIBLE);\r\n            binding.buttonSignUp.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/securemessagingapp/activities/SignUpActivity.java b/app/src/main/java/com/example/securemessagingapp/activities/SignUpActivity.java
--- a/app/src/main/java/com/example/securemessagingapp/activities/SignUpActivity.java	(revision 68cda3a54de2676894300be203602abf15215e56)
+++ b/app/src/main/java/com/example/securemessagingapp/activities/SignUpActivity.java	(date 1710479792542)
@@ -1,9 +1,5 @@
 package com.example.securemessagingapp.activities;
 
-import androidx.activity.result.ActivityResultLauncher;
-import androidx.activity.result.contract.ActivityResultContracts;
-import androidx.appcompat.app.AppCompatActivity;
-
 import android.content.Intent;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -15,19 +11,19 @@
 import android.view.View;
 import android.widget.Toast;
 
-//import com.example.securemessagingapp.R;
-import com.example.securemessagingapp.databinding.ActivitySignInBinding;
+import androidx.activity.result.ActivityResultLauncher;
+import androidx.activity.result.contract.ActivityResultContracts;
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.example.securemessagingapp.databinding.ActivitySignUpBinding;
 import com.example.securemessagingapp.utilities.Constants;
 import com.example.securemessagingapp.utilities.PreferenceManager;
 import com.google.firebase.firestore.FirebaseFirestore;
 
 import java.io.ByteArrayOutputStream;
-import java.io.Console;
 import java.io.FileNotFoundException;
 import java.io.InputStream;
 import java.util.HashMap;
-import java.util.Hashtable;
 
 public class SignUpActivity extends AppCompatActivity {
 
@@ -125,6 +121,10 @@
         else if(binding.inputName.getText().toString().trim().isEmpty()){
             showToast("Enter name");
             return false;
+        }
+        else if(binding.inputName.getText().toString().matches(".*\\d.*")){
+            showToast("Name contains number(s)");
+            return false;
         }
         else if(binding.inputEmail.getText().toString().trim().isEmpty()){
             showToast("Enter Email");
